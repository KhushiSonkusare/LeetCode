#include <iostream>

struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

void addFirst(int val, ListNode *&head) {
    ListNode *node = new ListNode(val);
    
    if(head != nullptr) {
        node->next = head;
    }
    head = node;
}

void addLast(int val, ListNode *&head){
    ListNode *node = new ListNode(val);
    ListNode *temp = head;
    if(head == nullptr){
        head = node;
    }else{
        while(temp->next!= nullptr){
            temp = temp->next;
        }
        temp->next = node;
    }
}

void addAtIndex(int val, ListNode *&head, int ind){
    ListNode *node = new ListNode(val);
    ListNode *temp = head;
    if(head == nullptr){
        head = node;
    }else{
        for(int i = 0; i<ind -1 ; i++){
            temp = temp->next;
        }
        ListNode *nextN = temp->next;
        temp->next = node;
        node->next = nextN;
    }
}

void display(ListNode *head) {
    ListNode *temp = head;
    while(temp != nullptr) {
        std::cout << temp->val << " ";
        temp = temp->next;
    }
    std::cout << std::endl;
}

int main() {
    ListNode *head = nullptr;
    
    addFirst(1, head);
    addFirst(2, head);
    addFirst(3, head);
    addLast(4, head);
    addAtIndex(5,head,2);
    
    display(head);

    return 0;
}
