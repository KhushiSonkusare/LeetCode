#include <bits/stdc++.h>
using namespace std;

void generatePermutations(vector<int>& arr, int start, vector<vector<int>>& result) {
    if (start == arr.size()) {
        result.push_back(arr); 
        return;
    }

    for (int i = start; i < arr.size(); ++i) {
        swap(arr[start], arr[i]);
        generatePermutations(arr, start + 1, result); 
        swap(arr[start], arr[i]);
    }
}

int main() {
    int T;
    cin >> T;
    
    while (T--) {
        int N, K;
        cin >> N >> K; 

        vector<int> arr(N);
        for (int i = 0; i < N; i++) {
            arr[i] = i + 1;
        }

        vector<vector<int>> result; 
        generatePermutations(arr, 0, result);

        bool found = false;
        for (const auto& perm : result) {
            int count = 0;
            for (int i = 0; i < perm.size(); i++) {
                if (perm[i] % K != (i+1)% K) {
                    count++;
                } else {
                    break;
                }
            }
            if (count == N) { 
                for (int num : perm) {
                    cout << num << " ";
                }
                cout << endl;
                found = true;
                break;
            }
        }
        if (!found) {
            cout << -1 << endl;
        }
    }
    return 0;
}
